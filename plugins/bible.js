/*
Project Name : PEACE HUB
Creator      : Peacemaker
Repo         : https://github.com/Peacemaker-cyber/PEACE-HUB
*/   

const axios = require("axios");
const { malvin } = require("../malvin");

// Command: bible
malvin({
    pattern: "bible",
    desc: "Fetch Bible verses by reference.",
    category: "download",
    react: "üìñ",
    filename: __filename
}, async (conn, mek, m, { args, reply }) => {
    try {
        // Check if a reference is provided
        if (args.length === 0) {
            return reply(`‚ö†Ô∏è *Please provide a Bible reference.*\n\nüìù *Example:*\n.bible John 1:1`);
        }

        // Join the arguments to form the reference
        const reference = args.join(" ");

        // Call the API with the reference
        const apiUrl = `https://bible-api.com/${encodeURIComponent(reference)}`;
        const response = await axios.get(apiUrl);

        // Check if the response contains data
        if (response.status === 200 && response.data.text) {
            const { reference: ref, text, translation_name, book_name, chapter, verse } = response.data;

            // Format the response with more metadata
            reply(
                `üåü * ô…™ ô ü·¥á ·¥Ö Ä·¥è·¥ò ·¥Ä ü·¥á Ä·¥õ!*\n\n` +
                `üÜî * Ä·¥áÍú∞·¥á Ä·¥á…¥·¥Ñ·¥á:* ${ref}\n` +
                `üìò * ô·¥è·¥è·¥ã:* ${book_name}\n` +
                `üîé *·¥Ñ ú·¥Ä·¥ò·¥õ·¥á Ä:* ${chapter}\n` +
                `üî° *·¥†·¥á ÄÍú±·¥á:* ${verse}\n\n` +
                `üí¨ *·¥†·¥á ÄÍú±·¥á ·¥õ·¥áx·¥õ:* ${text}\n\n` +
                `üåê *·¥õ Ä·¥Ä…¥Íú± ü·¥Ä·¥õ…™·¥è…¥:* ${translation_name}\n\n` +
                `> üöÄ ·¥ò·¥è·¥°·¥á Ä·¥á·¥Ö  ô è ·¥ò·¥á·¥Ä·¥Ñ·¥á  ú·¥ú ô`
            );
        } else {
            reply("‚ùå *Verse not found.* Please check the reference and try again.");
        }
    } catch (error) {
        console.error(error);
        reply("‚ö†Ô∏è *An error occurred while fetching the Bible verse.* Please try again.");
    }
});
